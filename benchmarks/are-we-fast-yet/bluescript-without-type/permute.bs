import { integer, float, Array } from "../../../../bluescript/modules/base";
import { assert, abs, fabs, sqrt } from "../../../../bluescript/modules/esp32/bluescript/utils";

const RESULT = 8660;

let count = 0;

function swap(v, i, j) {
    const tmp = v[i];
    v[i] = v[j];
    v[j] = tmp;
}

function permute(v, n) {
    count += 1;
    if (n != 0) {
        let n1 = n - 1;
        permute(v, n1);
        for (let i = n1; i > -1; i--) {
            swap(v, n1, i);
            permute(v, n1);
            swap(v, n1, i);
        }
    }
}

function verify_result(result) {
    return result === RESULT;
}


function benchmark(cycle) {
    for (let i = 0; i < cycle; i++) {
        count = 0;
        let arr = new Array<integer>(6, 0);
        permute(arr, 6);
        assert(verify_result(count));
    }
}


benchmark(3);
